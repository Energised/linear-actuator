#!/usr/bin/python

# Copyright 2013 Michigan Technological University
# Author: Bas Wijnen <bwijnen@mtu.edu>
# This design was developed as part of a project with
# the Michigan Tech Open Sustainability Technology Research Group
# http://www.appropedia.org/Category:MOST
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import wshttpd
import network
import json

targetport = 'pi:8000'
serverport = '8080'

class Connection (wshttpd.Wshttpd):
	users = set ()
	def opened (self):
		Connection.users.add (self)
	def closed (self):
		Connection.users.remove (self)
	def page (self):
		if self.address.path == '/':
			self.reply_html (open ('pump.html').read ())
		elif self.address.path == '/pump.js':
			self.reply_js (open ('pump.js').read ())
		elif self.address.path == '/pump.css':
			self.reply_css (open ('pump.css').read ())
		else:
			self.reply (404)
	def recv (self, frame):
		print ('recv', frame)
		data = json.loads (frame)
		d = getattr (c, data[0]) (*data[1:])
		if d:
			for i in d:
				self.send (json.dumps (i))

class events:
	def notify (self, *args):
		if len (Connection.users) == 0:
			return
		data = json.dumps (args)
		for u in Connection.users:
			u.send (data)

c = network.RPCSocket (targetport, events (), tls = False)
s = network.Server (serverport, Connection, tls = False)
print ('running')
network.fgloop ()
